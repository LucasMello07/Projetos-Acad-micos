ATIVIDADE - Consultas no BD do Projeto (29/11)
(Adilson Tavares da Rocha Junior, Giovana Naiara, Lucas de Mello Freitas, Otavio Henrique Torres, Viktor Jose Blasck, Vinicius Rodrigues Correia)


/*1 - Selecione as denúncias realizadas este ano. Liste o nome do usuário, e-mail, instituição, motivo da denúncia, 
descrição e data. Ordene das mais recentes para as mais antigas.*/

SELECT DENUNCIAS.DNC_ID, USUARIOS.USU_NOME, USUARIOS.USU_EMAIL, USUARIOS.USU_INSTITUICAO_ENSINO, DENUNCIAS.DNC_MOTIVO, DNC_DESCRICAO, DENUNCIAS.DNC_DATA
FROM DENUNCIAS
INNER JOIN USUARIOS ON USUARIOS.USU_ID = DENUNCIAS.FK_USUARIOS_USU_ID
ORDER BY DENUNCIAS.DNC_ID;

/*2 - Selecione os comentários dos usuários. Liste nome do usuário, e-mail, instituição, tipo de postagem, descrição, quantidade de curtidas. 
Ordene por usuário, comentários mais curtidos e descrição. */

SELECT USUARIOS.USU_NOME, USUARIOS.USU_EMAIL, USUARIOS.USU_INSTITUICAO_ENSINO, COMENTARIOS.CMT_TIPO_POSTAGEM, USUARIOS.USU_DESCRICAO, 
COMENTARIOS.CMT_CURTIDAS
FROM COMENTARIOS
INNER JOIN USUARIOS ON COMENTARIOS.FK_USUARIOS_USU_ID = USUARIOS.USU_ID
ORDER BY USUARIOS.USU_NOME, COMENTARIOS.CMT_CURTIDAS DESC, USUARIOS.USU_DESCRICAO;

/*3 - Selecione as notificações enviadas aos usuários. Liste nome do usuário, e-mail, instituição, título e descrição. 
Ordene por usuário e título da notificação.*/

SELECT USUARIOS.USU_NOME, USUARIOS.USU_EMAIL, USUARIOS.USU_INSTITUICAO_ENSINO, NOTIFICACOES.NOT_TITULO, NOTIFICACOES.NOT_DESCRICAO
FROM NOTIFICACOES
INNER JOIN USUARIOS ON NOTIFICACOES.FK_USUARIOS_USU_ID = USUARIOS.USU_ID
ORDER BY USUARIOS.USU_ID, NOTIFICACOES.NOT_TITULO;

/*4 - Selecione os produtos comprados pelos usuários. Liste nome do usuário, e-mail, nome da atlética, instituição, 
data da compra, valor da compra, quantidade de itens e a descrição do produto comprado. Ordene pelo usuário 
e compras mais recentes.*/

SELECT USUARIOS.USU_ID, USUARIOS.USU_NOME, USUARIOS.USU_EMAIL, ATLETICAS.ATL_NOME, USUARIOS.USU_INSTITUICAO_ENSINO, COMPRAS.CMP_DATA, 'VALOR COMPRA', ITEMS_COMPRAS.ITS_QUANTIDADE, PRODUTOS.PRO_DESCRICAO
FROM PRODUTOS
INNER JOIN LOTES_PRODUTOS ON LOTES_PRODUTOS.FK_PRODUTOS_PRO_ID = PRODUTOS.PRO_ID
INNER JOIN COMPRAS ON ITEMS_COMPRAS.FK_COMPRAS_CMP_ID = COMPRAS.CMP_ID
INNER JOIN USUARIOS ON COMPRAS.FK_USUARIOS_USU_ID = USUARIOS.USU_ID
INNER JOIN ITEMS_COMPRAS ON ITEMS_COMPRAS.FK_LOTES_PRODUTOS_LOP_ID = LOTES_PRODUTOS.LOP_ID
INNER JOIN ATLETICAS ON USUARIOS.FK_ATLETICAS_ATL_ID = ATLETICAS.ATL_ID
ORDER BY USUARIOS.USU_NOME, COMPRAS.CMP_DATA;

/*5 - Selecione os ingressos de eventos sociais comprados pelos usuários. Liste nome do usuário, e-mail, 
nome da atlética, instituição, data da compra, valor da compra, a quantidade e o nome do evento social. 
Ordene pelo usuário e compras mais recentes.*/

SELECT USUARIOS.USU_NOME, USUARIOS.USU_EMAIL, ATLETICAS.ATL_NOME, ATLETICAS.ATL_INSTITUICAO_ENSINO, COMPRAS_INGRESSOS.CPI_DATA_COMPRA,
(LOTES_INGRESSOS.LOI_VALOR * COMPRAS_INGRESSOS.FK_LOTES_INGRESSOS_LOI_ID) AS VALOR_COMPRA, COMPRAS_INGRESSOS.FK_LOTES_INGRESSOS_LOI_ID, EVENTOS_SOCIAIS.EVE_NOME
FROM COMPRAS_INGRESSOS
INNER JOIN USUARIOS ON COMPRAS_INGRESSOS.FK_USUARIOS_USU_ID = USUARIOS.USU_ID
INNER JOIN ATLETICAS ON USUARIOS.FK_ATLETICAS_ATL_ID = ATLETICAS.ATL_ID
INNER JOIN LOTES_INGRESSOS ON COMPRAS_INGRESSOS.FK_LOTES_INGRESSOS_LOI_ID = LOTES_INGRESSOS.LOI_ID
INNER JOIN INGRESSOS ON LOTES_INGRESSOS.FK_INGRESSOS_ING_ID = INGRESSOS.ING_ID
INNER JOIN EVENTOS_SOCIAIS ON INGRESSOS.FK_EVENTOS_SOCIAIS_EVS_ID = EVENTOS_SOCIAIS.EVS_ID
ORDER BY USUARIOS.USU_NOME, COMPRAS_INGRESSOS.CPI_DATA_COMPRA DESC;

/*6 - Selecione os ingressos de eventos esportivos comprados pelos usuários. Liste nome do usuário, e-mail, nome da atlética, instituição, 
data da compra, valor da compra, a quantidade e o nome do evento social. Ordene pelo usuário e compras mais recentes. */

SELECT USUARIOS.USU_NOME, USUARIOS.USU_EMAIL, ATLETICAS.ATL_NOME, ATLETICAS.ATL_INSTITUICAO_ENSINO, COMPRAS_INGRESSOS.CPI_DATA_COMPRA,
(LOTES_INGRESSOS.LOI_VALOR * COMPRAS_INGRESSOS.FK_LOTES_INGRESSOS_LOI_ID) AS VALOR_COMPRA, COMPRAS_INGRESSOS.FK_LOTES_INGRESSOS_LOI_ID, 
EVENTOS_ESPORTIVOS.EVE_NOME
FROM COMPRAS_INGRESSOS
INNER JOIN USUARIOS ON COMPRAS_INGRESSOS.FK_USUARIOS_USU_ID = USUARIOS.USU_ID
INNER JOIN ATLETICAS ON USUARIOS.FK_ATLETICAS_ATL_ID = ATLETICAS.ATL_ID
INNER JOIN LOTES_INGRESSOS ON COMPRAS_INGRESSOS.FK_LOTES_INGRESSOS_LOI_ID = LOTES_INGRESSOS.LOI_ID
INNER JOIN INGRESSOS ON LOTES_INGRESSOS.FK_INGRESSOS_ING_ID = INGRESSOS.ING_ID
INNER JOIN EVENTOS_ESPORTIVOS ON INGRESSOS.FK_EVENTOS_ESPORTIVOS_EVE_ID = EVENTOS_ESPORTIVOS.EVE_ID
ORDER BY USUARIOS.USU_NOME, COMPRAS_INGRESSOS.CPI_DATA_COMPRA DESC;

/*7 - Selecione nome da atlética, usuário e o valor total de pagamentos realizados por ano. Ordene por atlética, usuário e ano de pagamento. */

SELECT ATLETICAS.ATL_NOME, USUARIOS.USU_NOME, SUM(PAGAMENTOS.PAG_VALOR_PAGO) AS VALOR_PAGO, YEAR(PAGAMENTOS.PAG_DATA) AS DATA_PAGAMENTO
FROM PAGAMENTOS 
INNER JOIN USUARIOS ON PAGAMENTOS.FK_USUARIOS_USU_ID = USUARIOS.USU_ID
INNER JOIN ATLETICAS ON USUARIOS.FK_ATLETICAS_ATL_ID = ATLETICAS.ATL_ID
GROUP BY ATLETICAS.ATL_NOME, USUARIOS.USU_NOME, YEAR(PAGAMENTOS.PAG_DATA)
ORDER BY ATLETICAS.ATL_NOME, USUARIOS.USU_NOME, DATA_PAGAMENTO;

/*8 - Selecione os usuários, seus cargos e funcionalidades. Ordene por cargos e usuários.*/

SELECT USUARIOS.USU_ID, USUARIOS.USU_NOME, CARGOS.CAR_ID, CARGOS.CAR_NOME, FUNCIONALIDADES.FUN_NOME
FROM USUARIOS
INNER JOIN USUARIOS_CARGOS ON USUARIOS.USU_ID = USUARIOS_CARGOS.FK_USUARIOS_USU_ID
INNER JOIN CARGOS ON CARGOS.CAR_ID = USUARIOS_CARGOS.FK_CARGOS_CAR_ID
INNER JOIN CARGOS_FUNCIONALIDADES ON CARGOS.CAR_ID = CARGOS_FUNCIONALIDADES.FK_CARGOS_CAR_ID
INNER JOIN FUNCIONALIDADES ON FUNCIONALIDADES.FUN_ID = CARGOS_FUNCIONALIDADES.FK_FUNCIONALIDADES_FUN_ID
ORDER BY CARGOS.CAR_NOME, USUARIOS.USU_NOME;

/*9- Selecione as estatísticas dos atletas em cada jogo e modalidade que participou. Liste nome do usuário, e-mail, instituição, tipo de esporte, modalidade, gênero, data do jogo, 
resultado e dados estatísticos. Ordene pelo usuário e jogos mais recentes.*/

SELECT USUARIOS.USU_NOME, USUARIOS.USU_EMAIL, USUARIOS.USU_INSTITUICAO_ENSINO, MODALIDADES_ESPORTIVAS.MDE_TIPO_DE_ESPORTE,
MODALIDADES_ESPORTIVAS.MDE_NOME, MODALIDADES_ESPORTIVAS.MDE_GENERO, JOGOS.JOG_EQPA_RESULTADO_FINAL AS RESULTADO_A,
JOGOS.JOG_EQPB_RESULTADO_FINAL AS RESULTADO_B, JOGOS.JOG_DIA, ESTATISTICAS_JOGO_ATLETA.EJA_TIPO_ESTATISTICAS
FROM ESTATISTICAS_JOGO_ATLETA
INNER JOIN JOGOS ON ESTATISTICAS_JOGO_ATLETA.FK_JOGOS_JOG_ID = JOGOS.JOG_ID
INNER JOIN CAMPEONATOS_MODALIDADES ON JOGOS.FK_CAMPEONATOS_MODALIDADES_CMM_ID = CAMPEONATOS_MODALIDADES.CMM_ID
INNER JOIN MODALIDADES_ESPORTIVAS ON CAMPEONATOS_MODALIDADES.FK_MODALIDADES_ESPORTIVAS_MDE_ID = MODALIDADES_ESPORTIVAS.MDE_ID
INNER JOIN USUARIOS ON ESTATISTICAS_JOGO_ATLETA.FK_USUARIOS_USU_ID = USUARIOS.USU_ID
ORDER BY USUARIOS.USU_NOME, JOGOS.JOG_DIA DESC;

/*10 - Selecione as equipes participantes dos jogos e suas respectivas modalidades esportivas. Liste Liste nome do usuário, e-mail, instituição, 
nome da atlética, tipo de esporte e modalidade. Ordene por atlética, modalidade e participante. */

SELECT USUARIOS.USU_NOME, USUARIOS.USU_EMAIL, USUARIOS.USU_INSTITUICAO_ENSINO, ATLETICAS.ATL_NOME, 
MODALIDADES_ESPORTIVAS.MDE_TIPO_DE_ESPORTE, MODALIDADES_ESPORTIVAS.MDE_NOME
FROM EQUIPES_PARTICIPANTES
INNER JOIN EQUIPES ON EQUIPES_PARTICIPANTES.FK_EQUIPES_EQP_ID = EQUIPES.EQP_ID
INNER JOIN USUARIOS ON EQUIPES.FK_EQUIPES_ATLETAS_ETL_ID = USUARIOS.USU_ID
INNER JOIN ATLETICAS ON EQUIPES.FK_ATLETICAS_ATL_ID = ATLETICAS.ATL_ID
INNER JOIN MODALIDADES_ESPORTIVAS ON EQUIPES.FK_MODALIDADES_ESPORTIVAS_MDE_ID = MODALIDADES_ESPORTIVAS.MDE_ID
ORDER BY ATLETICAS.ATL_NOME, MODALIDADES_ESPORTIVAS.MDE_NOME, USUARIOS.USU_NOME;

/*11 - Selecione os eventos esportivos e suas postagens. Liste o nome do evento, atlética, data, a descrição do post, a data do post, 
a quantidade de curtidas e o nome do usuário que fez o comentário. Ordene pela atlética, evento e data. */

SELECT EVENTOS_ESPORTIVOS.EVE_NOME, ATLETICAS.ATL_NOME, EVENTOS_ESPORTIVOS.EVE_DATAEVENTO, POSTAGENS_GERAL.PST_DESCRICAO, POSTAGENS_GERAL.PST_DATA,
POSTAGENS_GERAL.PST_CURTIDAS, USUARIOS.USU_NOME
FROM USUARIOS
INNER JOIN COMENTARIOS ON COMENTARIOS.FK_USUARIOS_USU_ID = USUARIOS.USU_ID
INNER JOIN ATLETICAS ON ATLETICAS.ATL_ID = USUARIOS.FK_ATLETICAS_ATL_ID
INNER JOIN EVENTOS_ESPORTIVOS ON EVENTOS_ESPORTIVOS.FK_ATLETICAS_ATL_ID = ATLETICAS.ATL_ID
INNER JOIN POSTAGENS_EVENTOS ON POSTAGENS_EVENTOS.FK_EVENTOS_ESPORTIVOS_EVE_ID = EVENTOS_ESPORTIVOS.EVE_ID
INNER JOIN POSTAGENS_GERAL ON POSTAGENS_GERAL.PST_ID = POSTAGENS_EVENTOS.FK_POSTAGENS_GERAL_PST_ID
ORDER BY ATLETICAS.ATL_NOME, EVENTOS_ESPORTIVOS.EVE_NOME, EVENTOS_ESPORTIVOS.EVE_DATAEVENTO;